require 'spec_helper'

describe "tests for puppet.conf" do
  describe command('puppet config print') do
    its(:exit_status) { should eq 0 }
    its(:stdout) { should match /agent_catalog_run_lockfile = \/var\/lib\/puppet\/state\/agent_catalog_run.lock/ }
    its(:stdout) { should match /agent_disabled_lockfile = \/var\/lib\/puppet\/state\/agent_disabled.lock/ }
    its(:stdout) { should match /allow_duplicate_certs = false/ }
    its(:stdout) { should match /allow_variables_with_dashes = false/ }
    its(:stdout) { should match /always_cache_features = false/ }
    its(:stdout) { should match /archive_file_server = puppet/ }
    its(:stdout) { should match /archive_files = false/ }
    its(:stdout) { should match /async_storeconfigs = false/ }
    its(:stdout) { should match /autoflush = true/ }
    its(:stdout) { should match /autosign = \/etc\/puppet\/autosign.conf/ }
    its(:stdout) { should match /basemodulepath = \/etc\/puppet\/modules:\/usr\/share\/puppet\/modules/ }
    its(:stdout) { should match /bindaddress = 0.0.0.0/ }
    its(:stdout) { should match /binder_config =/ }
    its(:stdout) { should match /binder = false/ }
    its(:stdout) { should match /bucketdir = \/var\/lib\/puppet\/bucket/ }
    its(:stdout) { should match /cacert = \/var\/lib\/puppet\/ssl\/ca\/ca_crt.pem/ }
    its(:stdout) { should match /cacrl = \/var\/lib\/puppet\/ssl\/ca\/ca_crl.pem/ }
    its(:stdout) { should match /cadir = \/var\/lib\/puppet\/ssl\/ca/ }
    its(:stdout) { should match /cakey = \/var\/lib\/puppet\/ssl\/ca\/ca_key.pem/ }
    its(:stdout) { should match /ca_name = Puppet CA: puppet.vm.vagrant/ }
    its(:stdout) { should match /capass = \/var\/lib\/puppet\/ssl\/ca\/private\/ca.pass/ }
    its(:stdout) { should match /ca_port = 8140/ }
    its(:stdout) { should match /caprivatedir = \/var\/lib\/puppet\/ssl\/ca\/private/ }
    its(:stdout) { should match /capub = \/var\/lib\/puppet\/ssl\/ca\/ca_pub.pem/ }
    its(:stdout) { should match /ca_server = puppet/ }
    its(:stdout) { should match /catalog_cache_terminus =/ }
    its(:stdout) { should match /catalog_format =/ }
    its(:stdout) { should match /catalog_terminus = compiler/ }
    its(:stdout) { should match /ca = true/ }
    its(:stdout) { should match /ca_ttl = 157680000/ }
    its(:stdout) { should match /certdir = \/var\/lib\/puppet\/ssl\/certs/ }
    its(:stdout) { should match /certdnsnames =/ }
    its(:stdout) { should match /certificate_expire_warning = 5184000/ }
    its(:stdout) { should match /certificate_revocation = true/ }
    its(:stdout) { should match /cert_inventory = \/var\/lib\/puppet\/ssl\/ca\/inventory.txt/ }
    its(:stdout) { should match /certname = puppet.vm.vagrant/ }
    its(:stdout) { should match /cfacter = false/ }
    its(:stdout) { should match /classfile = \/var\/lib\/puppet\/state\/classes.txt/ }
    its(:stdout) { should match /clientbucketdir = \/var\/lib\/puppet\/clientbucket/ }
    its(:stdout) { should match /client_datadir = \/var\/lib\/puppet\/client_data/ }
    its(:stdout) { should match /clientyamldir = \/var\/lib\/puppet\/client_yaml/ }
    its(:stdout) { should match /code =/ }
    its(:stdout) { should match /color = ansi/ }
    its(:stdout) { should match /confdir = \/etc\/puppet/ }
    its(:stdout) { should match /config = \/etc\/puppet\/puppet.conf/ }
    its(:stdout) { should match /config_file_name = puppet.conf/ }
    its(:stdout) { should match /configprint =/ }
    its(:stdout) { should match /configtimeout = 120/ }
    its(:stdout) { should match /config_version =/ }
    its(:stdout) { should match /couchdb_url = http:\/\/127.0.0.1:5984\/puppet/ }
    its(:stdout) { should match /csr_attributes = \/etc\/puppet\/csr_attributes.yaml/ }
    its(:stdout) { should match /csrdir = \/var\/lib\/puppet\/ssl\/ca\/requests/ }
    its(:stdout) { should match /daemonize = true/ }
    its(:stdout) { should match /data_binding_terminus = hiera/ }
    its(:stdout) { should match /dbadapter = sqlite3/ }
    its(:stdout) { should match /dbconnections =/ }
    its(:stdout) { should match /dblocation = \/var\/lib\/puppet\/state\/clientconfigs.sqlite3/ }
    its(:stdout) { should match /dbmigrate = false/ }
    its(:stdout) { should match /dbname = puppet/ }
    its(:stdout) { should match /dbpassword = puppet/ }
    its(:stdout) { should match /dbport =/ }
    its(:stdout) { should match /dbserver = localhost/ }
    its(:stdout) { should match /dbsocket =/ }
    its(:stdout) { should match /dbuser = puppet/ }
    its(:stdout) { should match /default_file_terminus = rest/ }
    its(:stdout) { should match /default_manifest = .\/manifests/ }
    its(:stdout) { should match /default_schedules = true/ }
    its(:stdout) { should match /deviceconfig = \/etc\/puppet\/device.conf/ }
    its(:stdout) { should match /devicedir = \/var\/lib\/puppet\/devices/ }
    its(:stdout) { should match /diff_args = -u/ }
    its(:stdout) { should match /diff = diff/ }
    its(:stdout) { should match /digest_algorithm = md5/ }
    its(:stdout) { should match /disable_per_environment_manifest = false/ }
    its(:stdout) { should match /disable_warnings = \[\]/ }
    its(:stdout) { should match /dns_alt_names =/ }
    its(:stdout) { should match /document_all = false/ }
    its(:stdout) { should match /dynamicfacts = memorysize,memoryfree,swapsize,swapfree/ }
    its(:stdout) { should match /environmentpath =/ }
    its(:stdout) { should match /environment = production/ }
    its(:stdout) { should match /environment_timeout = 0/ }
    its(:stdout) { should match /evaltrace = false/ }
    its(:stdout) { should match /external_nodes = none/ }
    its(:stdout) { should match /factpath = \/var\/lib\/puppet\/lib\/facter:\/var\/lib\/puppet\/facts/ }
    its(:stdout) { should match /facts_terminus = facter/ }
    its(:stdout) { should match /fileserverconfig = \/etc\/puppet\/fileserver.conf/ }
    its(:stdout) { should match /filetimeout = 15/ }
    its(:stdout) { should match /forge_authorization =/ }
    its(:stdout) { should match /freeze_main = false/ }
    its(:stdout) { should match /genconfig = false/ }
    its(:stdout) { should match /genmanifest = false/ }
    its(:stdout) { should match /graphdir = \/var\/lib\/puppet\/state\/graphs/ }
    its(:stdout) { should match /graph = false/ }
    its(:stdout) { should match /group = puppet/ }
    its(:stdout) { should match /hiera_config = \/etc\/puppet\/hiera.yaml/ }
    its(:stdout) { should match /hostcert = \/var\/lib\/puppet\/ssl\/certs\/puppet.vm.vagrant.pem/ }
    its(:stdout) { should match /hostcrl = \/var\/lib\/puppet\/ssl\/crl.pem/ }
    its(:stdout) { should match /hostcsr = \/var\/lib\/puppet\/ssl\/csr_puppet.vm.vagrant.pem/ }
    its(:stdout) { should match /hostprivkey = \/var\/lib\/puppet\/ssl\/private_keys\/puppet.vm.vagrant.pem/ }
    its(:stdout) { should match /hostpubkey = \/var\/lib\/puppet\/ssl\/public_keys\/puppet.vm.vagrant.pem/ }
    its(:stdout) { should match /http_compression = false/ }
    its(:stdout) { should match /http_debug = false/ }
    its(:stdout) { should match /http_keepalive_timeout = 4/ }
    its(:stdout) { should match /httplog = \/var\/log\/puppet\/http.log/ }
    its(:stdout) { should match /http_proxy_host = none/ }
    its(:stdout) { should match /http_proxy_password = none/ }
    its(:stdout) { should match /http_proxy_port = 3128/ }
    its(:stdout) { should match /http_proxy_user = none/ }
    its(:stdout) { should match /ignorecache = false/ }
    its(:stdout) { should match /ignoreimport = false/ }
    its(:stdout) { should match /ignoremissingtypes = false/ }
    its(:stdout) { should match /ignoreschedules = false/ }
    its(:stdout) { should match /immutable_node_data = false/ }
    its(:stdout) { should match /inventory_port = 8140/ }
    its(:stdout) { should match /inventory_server = puppet/ }
    its(:stdout) { should match /inventory_terminus = facter/ }
    its(:stdout) { should match /keylength = 4096/ }
    its(:stdout) { should match /lastrunfile = \/var\/lib\/puppet\/state\/last_run_summary.yaml/ }
    its(:stdout) { should match /lastrunreport = \/var\/lib\/puppet\/state\/last_run_report.yaml/ }
    its(:stdout) { should match /ldapattrs = all/ }
    its(:stdout) { should match /ldapbase =/ }
    its(:stdout) { should match /ldapclassattrs = puppetclass/ }
    its(:stdout) { should match /ldapparentattr = parentnode/ }
    its(:stdout) { should match /ldappassword =/ }
    its(:stdout) { should match /ldapport = 389/ }
    its(:stdout) { should match /ldapserver = ldap/ }
    its(:stdout) { should match /ldapssl = false/ }
    its(:stdout) { should match /ldapstackedattrs = puppetvar/ }
    # its(:stdout) { should match /ldapstring = (\&\(objectclass=puppetClient\)\(cn=%s\))/ }
    its(:stdout) { should match /ldaptls = false/ }
    its(:stdout) { should match /ldapuser =/ }
    its(:stdout) { should match /legacy_query_parameter_serialization = false/ }
    its(:stdout) { should match /libdir = \/var\/lib\/puppet\/lib/ }
    its(:stdout) { should match /listen = false/ }
    its(:stdout) { should match /localcacert = \/var\/lib\/puppet\/ssl\/certs\/ca.pem/ }
    its(:stdout) { should match /localconfig = \/var\/lib\/puppet\/state\/localconfig/ }
    its(:stdout) { should match /logdir = \/var\/log\/puppet/ }
    its(:stdout) { should match /log_level = notice/ }
    its(:stdout) { should match /manage_internal_file_permissions = true/ }
    its(:stdout) { should match /manifestdir = \/etc\/puppet\/manifests/ }
    its(:stdout) { should match /manifest = \/etc\/puppet\/manifests\/site.pp/ }
    its(:stdout) { should match /masterhttplog = \/var\/log\/puppet\/masterhttp.log/ }
    its(:stdout) { should match /masterlog = \/var\/log\/puppet\/puppetmaster.log/ }
    its(:stdout) { should match /masterport = 8140/ }
    its(:stdout) { should match /max_deprecations = 10/ }
    its(:stdout) { should match /max_errors = 10/ }
    its(:stdout) { should match /maximum_uid = 4294967290/ }
    its(:stdout) { should match /max_warnings = 10/ }
    its(:stdout) { should match /mkusers = false/ }
    its(:stdout) { should match /module_groups = / }
    its(:stdout) { should match /modulepath = \/etc\/puppet\/modules:\/usr\/share\/puppet\/modules/ }
    its(:stdout) { should match /module_repository = https:\/\/forgeapi.puppetlabs.com/ }
    its(:stdout) { should match /module_skeleton_dir = \/var\/lib\/puppet\/puppet-module\/skeleton/ }
    its(:stdout) { should match /module_working_dir = \/var\/lib\/puppet\/puppet-module/ }
    its(:stdout) { should match /name = config/ }
    its(:stdout) { should match /node_cache_terminus =/ }
    its(:stdout) { should match /node_name = cert/ }
    its(:stdout) { should match /node_name_fact =/ }
    its(:stdout) { should match /node_name_value = puppet.vm.vagrant/ }
    its(:stdout) { should match /node_terminus = plain/ }
    its(:stdout) { should match /noop = false/ }
    its(:stdout) { should match /onetime = false/ }
    its(:stdout) { should match /ordering = title-hash/ }
    its(:stdout) { should match /parser = current/ }
    its(:stdout) { should match /passfile = \/var\/lib\/puppet\/ssl\/private\/password/ }
    its(:stdout) { should match /path = none/ }
    its(:stdout) { should match /pidfile = \/var\/run\/puppet\/main.pid/ }
    its(:stdout) { should match /plugindest = \/var\/lib\/puppet\/lib/ }
    its(:stdout) { should match /pluginfactdest = \/var\/lib\/puppet\/facts.d/ }
    its(:stdout) { should match /pluginfactsource = puppet:\/\/puppet\/pluginfacts/ }
    its(:stdout) { should match /pluginsignore = .svn CVS .git/ }
    its(:stdout) { should match /pluginsource = puppet:\/\/puppet\/plugins/ }
    its(:stdout) { should match /pluginsync = true/ }
    its(:stdout) { should match /postrun_command =/ }
    its(:stdout) { should match /preferred_serialization_format = pson/ }
    its(:stdout) { should match /prerun_command =/ }
    its(:stdout) { should match /preview_outputdir = \/var\/lib\/puppet\/preview/ }
    its(:stdout) { should match /priority =/ }
    its(:stdout) { should match /privatedir = \/var\/lib\/puppet\/ssl\/private/ }
    its(:stdout) { should match /privatekeydir = \/var\/lib\/puppet\/ssl\/private_keys/ }
    its(:stdout) { should match /profile = false/ }
    its(:stdout) { should match /publickeydir = \/var\/lib\/puppet\/ssl\/public_keys/ }
    its(:stdout) { should match /puppetdlog = \/var\/log\/puppet\/puppetd.log/ }
    its(:stdout) { should match /puppetport = 8139/ }
    its(:stdout) { should match /queue_source = stomp:\/\/localhost:61613/ }
    its(:stdout) { should match /queue_type = stomp/ }
    its(:stdout) { should match /rails_loglevel = info/ }
    its(:stdout) { should match /railslog = \/var\/log\/puppet\/rails.log/ }
    its(:stdout) { should match /reportdir = \/var\/lib\/puppet\/reports/ }
    its(:stdout) { should match /reportfrom = report@puppet.vm.vagrant/ }
    its(:stdout) { should match /report_port = 8140/ }
    its(:stdout) { should match /report_server = puppet/ }
    its(:stdout) { should match /reports = store/ }
    its(:stdout) { should match /report = true/ }
    its(:stdout) { should match /reporturl = http:\/\/localhost:3000\/reports\/upload/ }
    its(:stdout) { should match /req_bits = 4096/ }
    its(:stdout) { should match /requestdir = \/var\/lib\/puppet\/ssl\/certificate_requests/ }
    its(:stdout) { should match /resourcefile = \/var\/lib\/puppet\/state\/resources.txt/ }
    its(:stdout) { should match /rest_authconfig = \/etc\/puppet\/auth.conf/ }
    its(:stdout) { should match /route_file = \/etc\/puppet\/routes.yaml/ }
    its(:stdout) { should match /rrddir = \/var\/lib\/puppet\/rrd/ }
    its(:stdout) { should match /rrdinterval = 1800/ }
    its(:stdout) { should match /rundir = \/var\/run\/puppet/ }
    its(:stdout) { should match /runinterval = 1800/ }
    its(:stdout) { should match /sendmail =/ }
    its(:stdout) { should match /serial = \/var\/lib\/puppet\/ssl\/ca\/serial/ }
    its(:stdout) { should match /server_datadir = \/var\/lib\/puppet\/server_data/ }
    its(:stdout) { should match /server = puppet/ }
    its(:stdout) { should match /show_diff = false/ }
    its(:stdout) { should match /signeddir = \/var\/lib\/puppet\/ssl\/ca\/signed/ }
    its(:stdout) { should match /smtphelo = puppet.vm.vagrant/ }
    its(:stdout) { should match /smtpport = 25/ }
    its(:stdout) { should match /smtpserver = none/ }
    its(:stdout) { should match /splay = false/ }
    its(:stdout) { should match /splaylimit = 1800/ }
    its(:stdout) { should match /srv_domain = vm.vagrant/ }
    its(:stdout) { should match /ssl_client_ca_auth =/ }
    its(:stdout) { should match /ssl_client_header = HTTP_X_CLIENT_DN/ }
    its(:stdout) { should match /ssl_client_verify_header = HTTP_X_CLIENT_VERIFY/ }
    its(:stdout) { should match /ssldir = \/var\/lib\/puppet\/ssl/ }
    its(:stdout) { should match /ssl_server_ca_auth =/ }
    its(:stdout) { should match /statedir = \/var\/lib\/puppet\/state/ }
    its(:stdout) { should match /statefile = \/var\/lib\/puppet\/state\/state.yaml/ }
    its(:stdout) { should match /storeconfigs_backend = active_record/ }
    its(:stdout) { should match /storeconfigs = false/ }
    its(:stdout) { should match /strict_hostname_checking = false/ }
    its(:stdout) { should match /strict_variables = false/ }
    its(:stdout) { should match /stringify_facts = true/ }
    its(:stdout) { should match /summarize = false/ }
    its(:stdout) { should match /syslogfacility = daemon/ }
    its(:stdout) { should match /tagmap = \/etc\/puppet\/tagmail.conf/ }
    its(:stdout) { should match /tags =/ }
    its(:stdout) { should match /templatedir = \/var\/lib\/puppet\/templates/ }
    its(:stdout) { should match /thin_storeconfigs = false/ }
    its(:stdout) { should match /trace = false/ }
    its(:stdout) { should match /trusted_node_data = false/ }
    its(:stdout) { should match /use_cached_catalog = false/ }
    its(:stdout) { should match /usecacheonfailure = true/ }
    its(:stdout) { should match /user = puppet/ }
    its(:stdout) { should match /use_srv_records = false/ }
    its(:stdout) { should match /vardir = \/var\/lib\/puppet/ }
    its(:stdout) { should match /waitforcert = 120/ }
    its(:stdout) { should match /yamldir = \/var\/lib\/puppet\/yaml/ }
    its(:stdout) { should match /zlib = true/ }
  end
end
